// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travell.Data;

namespace Datos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200602184348_secondCreate")]
    partial class secondCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Persona", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Identificacion");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Entity.Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Rutas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Valledupar-Bogotá",
                            Precio = 90000m
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Valledupar-Barranquilla",
                            Precio = 35000m
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Valledupar - Santa marta",
                            Precio = 40000m
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Valledupar - Cartagena",
                            Precio = 60000m
                        });
                });

            modelBuilder.Entity("Entity.Tiquet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PersonaId")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int>("RutaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.HasIndex("RutaId");

                    b.ToTable("Tiquets");
                });

            modelBuilder.Entity("Entity.Tiquet", b =>
                {
                    b.HasOne("Entity.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");

                    b.HasOne("Entity.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("RutaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
